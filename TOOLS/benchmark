#!/bin/bash

MAILADDRESS="sherpa@theory.phy.tu-dresden.de"
LOGFILE="sherpa_benchmarking"
STATUS="Benchmarking report: "
DATE=`date +'%y-%m-%d'`
CVSROOT=":ext:141.30.17.250:/usr/local/cvsroot"
CVS_RSH="ssh"
COMPILECOMMAND="TOOLS/makeinstall -t"
FILE="Benchmark.dat"
SHERPAPATH="SHERPA-1.0/Run/"
MEHANDLEREXIT=201

SetStatus() {
  STATUS=$STATUS$1
}

SendMail() {
  if [ "$IO_ERROR" = "TRUE" ] ; then SetStatus "IO error " ; fi
  if [ "$CVS_ERROR" = "TRUE" ] ; then SetStatus "CVS error " ; fi
  if [ "$COMPILE_ERROR" = "TRUE" ] ; then SetStatus "Compile error " ; fi
  if [ "$SETUP_ERROR" = "TRUE" ] ; then SetStatus "Setup error " ; fi
  if [ "$BENCHMARK_ERROR" = "TRUE" ] ; then SetStatus "Benchmark error " ; fi
  echo -e "\nbenchmark: for details consider\n\n           '$PWD/$OUTPUTFILE'\n" >> $LOGFILE
  nail -s "$STATUS" $MAILADDRESS < $LOGFILE
  exit $1
}

CleanUp() {
  for I in $1 ; do
    if [ -d $I ] ; then
      rm -rf $I/* > /dev/null 2>&1
    else
      rm -f $I > /dev/null 2>&1
    fi
  done
}

GetList() {
  while read ITEM ; do
    LIST=$LIST" "$ITEM
  done
}

GetFiles() {
  while read I ; do
    BENCHMARK=$BENCHMARK" "$I
  done
}

export CVSROOT
export CVS_RSH

for I in $* ; do
  if [ "$I" = "-f" ]; then DFILE=TRUE
  elif [ "$I" = "-f" ]; then DLOGFILE=TRUE
  elif [ "$I" = "-h" ]; then echo && \
    echo "benchmark version 1.0" && echo && \
    echo "options: -f <file>      specifiy benchmark points in file <file>" && \
    echo "         -l <logfile>   write benchmarking output to <logfile>" && \
    echo "         -h             display this help and exit" && echo && \
    exit 0
  elif [ "$DFILE" = "TRUE" ]; then DFILE="" && FILE=$I
  elif [ "$DLOGFILE" = "TRUE" ]; then DLOGFILE="" && LOGFILE=$I
  else echo "benchmark: error: unrecognized option '$I'. try '-h'" && \
    exit 1 
  fi
done

LOGFILE=$LOGFILE"_"$DATE
OUTPUTFILE=$LOGFILE"_full_output"
echo "" > $LOGFILE
echo "" > $OUTPUTFILE

echo -e "benchmark: benchmarking started at '$HOSTNAME' ($HOSTTYPE) on `date`\n" >> $LOGFILE
echo -e "benchmark: benchmarking started at '$HOSTNAME' ($HOSTTYPE) on `date`\n" >> $OUTPUTFILE
LIST=""
if [ -f $FILE ] ; then
  GetList < $FILE
else
  echo -e "benchmark: reading from input file '$FILE' failed" >> $LOGFILE
  echo -e "benchmark: reading from input file '$FILE' failed\n" >> $OUTPUTFILE
  IO_ERROR=TRUE
  SendMail 1
fi

echo -en "updating current sherpa version from cvs ... " >> $LOGFILE
echo -e "updating current sherpa version from cvs {\n" >> $OUTPUTFILE
if ! cvs update >> $OUTPUTFILE 2>&1 ; then
  echo -e "update failed\n\nbenchmark: cvs update failed" >> $LOGFILE
  echo -e "\n} update failed\n\nbenchmark: cvs update failed" >> $OUTPUTFILE
  CVS_ERROR=TRUE
  SendMail 2
else 
  echo -e "finished" >> $LOGFILE
  echo -e "\n} finished update\n" >> $OUTPUTFILE
fi

echo -en "compiling current sherpa version via '$COMPILECOMMAND' ... " >> $LOGFILE
echo -e "compiling current sherpa version via '$COMPILECOMMAND' {\n" >> $OUTPUTFILE
if ! $COMPILECOMMAND >> $OUTPUTFILE 2>&1 ; then
  echo -e "failed\n\nbenchmark: compilation failed" >> $LOGFILE
  echo -e "\n} compilation failed\n\nbenchmark: compilation failed" >> $OUTPUTFILE
  COMPILE_ERROR=TRUE
  SendMail 3
else 
  echo -e "finished" >> $LOGFILE
  echo -e "\n} finished compilation\n" >> $OUTPUTFILE
fi

for I in $LIST ; do
  if [ ! -d $I ] ; then
    echo "benchmark: setup directory '$I' is missing" >> $LOGFILE
    echo "benchmark: setup directory '$I' is missing" >> $OUTPUTFILE
    SETUP_ERROR=TRUE
  else
    echo -e "benchmark: benchmarking in '$I' ... " >> $LOGFILE
    echo -e "benchmark: benchmarking in '$I' {\n" >> $OUTPUTFILE
    cd $I
    BENCHMARK=""
    if [ -f $FILE ] ; then
      GetFiles < $FILE
    else
      echo -e "benchmark: no benchmarking points specified in '$PWD'" >> $LOGFILE
      echo -e "benchmark: no benchmarking points specified in '$PWD'" >> $OUTPUTFILE
      SETUP_ERROR=TRUE
    fi
    CleanUp "Results Analysis"
    RUNPATH=$PWD
    cd ../$SHERPAPATH
    makeclean >> $RUNPATH"/../"$OUTPUTFILE 2>&1
    Sherpa PATH=$RUNPATH ANALYSIS_OUTPUT=$RUNPATH \
	   RESULT_DIRECTORY=$RUNPATH"/Results/" >> $RUNPATH"/../"$OUTPUTFILE 2>&1
    while (( $? == $MEHANDLEREXIT )) ; do
      makelibs >> $RUNPATH"/../"$OUTPUTFILE 2>&1
      Sherpa PATH=$RUNPATH ANALYSIS_OUTPUT=$RUNPATH \
             RESULT_DIRECTORY=$RUNPATH"/Results/" >> $RUNPATH"/../"$OUTPUTFILE 2>&1
    done 
    cd $RUNPATH
    COUNTER=0
    for I in $BENCHMARK ; do
      (( ++COUNTER ))
      if (( $COUNTER%2 == 0 )) ; then 
        NEW=$I 
	diff -cb $NEW $OLD >> "../"$OUTPUTFILE 2>&1
	if (( $? != 0 )) ; then
	  BENCHMARK_ERROR=TRUE
	fi
      elif (( $COUNTER%2 == 1 )) ; then 
        OLD=$I
      else 
        echo -n
      fi
    done
    cd ..
    echo -e "... finished" >> $LOGFILE
    echo -e "\n} benchmarking finished \n" >> $OUTPUTFILE
  fi
done

if [ ! "$BENCHMARK_ERROR" = "TRUE" ] ; then
  SetStatus "Benchmarking succeeded "
  exit 0
fi
SendMail 4
