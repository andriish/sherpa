#!/usr/bin/awk -f

function pflavs(fl,b,e)
{
  pid="";
  for (j=b;j<e;++j) pid=pid" "fl[j];
  return pid;
}

function cflavs(fl,b,e,nc)
{
  for (j=b;j<e;++j) ++nc[fl[j]];  
}

function genpid(fl,n,pid)
{
  pid="";
  nc["21"]=0; nc["94"]=0;
  cflavs(nfl,0,2,nc);
  if (nc["21"]>0) pid=""nc["21"]"G";
  if (nc["94"]>0) pid=pid""nc["94"]"Q";
  pid=pid"-";
  nc["21"]=0; nc["94"]=0;
  cflavs(nfl,2,n,nc);
  if (nc["21"]>0) pid=pid""nc["21"]"G";
  if (nc["94"]>0) pid=pid""nc["94"]"Q";
  return pid;
}

function genfid(cbfn,cpid)
{
  cnif=split(cbfn,cbfns,"[.]");
  cfid=cbfns[1];
  for (k=2;k<cnif;++k) cfid=cfid"."cbfns[k];
  cfid=cfid"_"cpid;
  if (k>1) cfid=cfid"."cbfns[k];
  return cfid;
}

function expand(fl,i,n, al)
{
  if (i==n) {
    cpid=genpid(fl,n,pid);
    if (cpid in pst) return; pst[cpid]=1;
    cfn=genfid(bfn,cpid);
    print "  writing '"cfn"'";
    printf "Process :"pflavs(nfl,0,2) > cfn;
    printf " ->"pflavs(nfl,2,n) > cfn;
    print "" > cfn; 
    for (j in al) print al[j] > cfn;
    return;
  }
  if (fl[i]=="93") {
    nfl[i]="21";
    expand(fl,i+1,n,al);
    nfl[i]="94";
    expand(fl,i+1,n,al);
  }
  else {
    nfl[i]=fl[i];
    expand(fl,i+1,n,al);
  }
  if (i==0) {
    for (j in nfl) delete nfl[j];
    for (k in pst) delete pst[k];
  }
}

BEGIN{ ra=0; }
{
  if (ra==0) {
    if ($1!="Process" || $2!=":") {
      # print $0;
    }
    else {
      ra=1; fln=0;
      for (i=3;i<NF;++i) 
	if ($i!="->") fl[fln++]=$i;
      next;
    }
  }
  else {
    al[ra]=$0; ++ra;
    if ($1=="End" && $2=="process") {
      bfn=FILENAME;
      printf "split_proc: split";
      print pflavs(fl,0,2)" ->"pflavs(fl,2,fln)" {";
      expand(fl,0,fln,al);
      print "}";
      for (i in al) delete al[i];
      for (j in fl) delete fl[i];
      ra=0;
    }
  }
}
