#! /usr/bin/env python

from optparse import OptionParser, OptionGroup
import sys, os, fnmatch
from subprocess import Popen, PIPE

## Try to load faster but non-standard cElementTree module
try:
    import xml.etree.cElementTree as ET
except ImportError:
    try:
        import cElementTree as ET
    except ImportError:
        try:
            import xml.etree.ElementTree as ET
        except:
            sys.stderr.write("Can't load the ElementTree XML parser: please install it!\n")
            sys.exit(1)


usage = """Webpages from histogram files written out by Rivet.

Examples:
  source /path/to/rivetenv.sh
  %prog [options] <aidafile> [<aidafile> ...]
"""


parser = OptionParser(usage=usage)
parser.add_option("-o", "--outputdir", dest="OUTPUTDIR",
                  default="./", help="directory for webpage output.")

opts, aidafiles = parser.parse_args()

datadir = Popen(["rivet-config", "--datadir"], stdout=PIPE).communicate()[0].split()[0]
if opts.OUTPUTDIR is not None:
    os.makedirs(opts.OUTPUTDIR)


## get set of analyses involved in the runs
analyses = set()
for aidafile in aidafiles:
    aidafilepath = os.path.abspath(aidafile)
    if not os.access(aidafilepath, os.R_OK):
        print "Error: cannot read from %s" % aidafile
        exit(2)
    tree = ET.parse(aidafilepath)
    for dps in tree.findall("dataPointSet"):
        analyses.add(dps.get("path")[1:])

index = open(os.path.join(opts.OUTPUTDIR, "index.html"), "w")

for analysis in sorted(analyses):
    anapath = os.path.join(opts.OUTPUTDIR, analysis)
    os.mkdir(anapath)
    anaindex = open(os.path.join(anapath, "index.html"), 'w')
    anaindex.write("<html>\n")
    cmdargs = ["compare-histos"]
    cmdargs.append("--mc-errs")
    if os.access(os.path.join(datadir, analysis+".aida"), os.R_OK):
        cmdargs.append("%s/%s.aida" % (datadir, analysis))
    elif len(aidafiles)<2:
        cmdargs.append("--show-ref-only")
        cmdargs.append(" --no-ratio")
    for aidafile in aidafiles:
        cmdargs.append("%s" % os.path.abspath(aidafile))
    Popen(cmdargs, cwd=anapath).wait()
    for datfile in os.listdir(anapath):
        if datfile=="index.html":
            continue
        if not fnmatch.fnmatch(datfile, analysis+"*.dat"):
            os.unlink(os.path.join(anapath, datfile))
            continue
        psfile = datfile.replace(".dat", ".ps")
        pngfile = datfile.replace(".dat", ".png")
        Popen(["make-plots", "--full-range", datfile], cwd=anapath).wait()
        if os.access(os.path.join(anapath, psfile), os.R_OK):
            Popen(["convert", "-density", "100", psfile, pngfile], cwd=anapath)
            anaindex.write('<div style="float:left;">')
            anaindex.write('<a href="%s" style="font-size:small;text-decoration:none;font-weight:bold;">' % psfile)
            anaindex.write('%s:<br><img border="0" src="%s"></a></div>\n' % (psfile, pngfile))
    anaindex.write("</html>\n")
    index.write('<h1><a href="%s/index.html" style="text-decoration:none;">%s</a></h1>\n' %(analysis, analysis))
    description = Popen(["rivet", "--show-analysis", analysis], stdout=PIPE).communicate()[0]
    index.write('<pre>%s</pre>\n' % description)
