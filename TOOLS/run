#!/bin/bash
TIME=`date`

rmr () {  
  for file in * ; do                                                          
    if [ -d $file ] ; then                                                       
      cd $file                                                                  
      rmr "$1" $2
      cd ..                                                             
    fi
  done  
  for i in $1 ; do    
    rm -f $2 $i                                                                         
  done
}                                                                               

RUNPATH=""
BINPATH=""
RESULTS=""
ANALYSIS=""
SOPTIONS=""
BASENAME=""
BATCH="PBS"
BOPTIONS=""
for I in $* ; do
  if [ "$I" = "-p" ]; then DRUNPATH=TRUE 
  elif [ "$I" = "-b" ]; then DBINPATH=TRUE 
  elif [ "$I" = "-r" ]; then DRESULTS=TRUE 
  elif [ "$I" = "-a" ]; then DANALYSIS=TRUE 
  elif [ "$I" = "-e" ]; then DEVENTS=TRUE 
  elif [ "$I" = "-n" ]; then DBASENAME=TRUE 
  elif [ "$I" = "-o" ]; then DSOPTIONS=TRUE 
  elif [ "$I" = "-B" ]; then DBATCH=TRUE 
  elif [ "$I" = "-O" ]; then DBOPTIONS=TRUE 
  elif [ "$I" = "-S" ]; then SUBMIT=TRUE 
  elif [ "$I" = "-h" ]; then echo && \
    echo "run version 1.0" && echo && \
    echo "options: -p <path>      read configuration from path <path>" && \
    echo "         -b <binpath>   take executeable from path <binpath>" && \
    echo "         -r <results>   write results to path <path>/<results>" && \
    echo "         -a <analysis>  write analysis output to path <path>/<analysis>" && \
    echo "         -e <events>    generate <events> events" && \
    echo "         -n <name>      set basic filename to <name>" && \
    echo "         -o <option>    define commandline option <option>" && \
    echo "         -B <system>    select batch system <system>" && \
    echo "         -O <option>    define batch system option <option>" && \
    echo "         -S             submit job to batch system" && \
    echo "         -h             display this help and exit" && echo && \
    exit 0
  elif [ "$DRUNPATH" = "TRUE" ]; then DRUNPATH="" && RUNPATH=$I
  elif [ "$DBINPATH" = "TRUE" ]; then DBINPATH="" && BINPATH=$I
  elif [ "$DRESULTS" = "TRUE" ]; then DRESULTS="" && RESULTS=$I
  elif [ "$DANALYSIS" = "TRUE" ]; then DANALYSIS="" && ANALYSIS=$I
  elif [ "$DEVENTS" = "TRUE" ]; then DEVENTS="" && EVENTS=$I
  elif [ "$DBASENAME" = "TRUE" ]; then DBASENAME="" && BASENAME=$I
  elif [ "$DSOPTIONS" = "TRUE" ]; then DSOPTIONS="" && SOPTIONS=$SOPTIONS" "$I
  elif [ "$DBATCH" = "TRUE" ]; then DBATCH="" && BATCH=$I
  elif [ "$DBOPTIONS" = "TRUE" ]; then DBOPTIONS="" && BOPTIONS=$BOPTIONS" "$I
  else echo "run: error: unrecognized option '$I'. try '-h'" && \
    exit 1 
  fi
done
if [ "$RUNPATH" = "" ]; then RUNPATH="./" ; fi
if [ "$BINPATH" = "" ]; then BINPATH="./" ; fi
if [ "$RESULTS" = "" ]; then RESULTS="./" ; fi
if [ "$ANALYSIS" = "" ]; then ANALYSIS="./" ; fi
if [ "$BASENAME" = "" ]; then BASENAME="job" ; fi
if [ ! "$BATCH" = "PBS" ] && [ ! "$BATCH" = "SGE" ] ; then 
  echo "run: error: invalid batch system: '$BATCH'"
  echo "run: supported batch systems are: 'PBS' / 'SGE'"
  exit 0
fi

COUNTER=0
LOGPATH=$PWD
SETUPPATH=$LOGPATH"/"$BASENAME
while test -d $SETUPPATH"_"$COUNTER ; do
  (( ++COUNTER ))
done
SETUPPATH=$SETUPPATH"_"$COUNTER
LOGFILE="run.log"
FILE=$BASENAME"_"$COUNTER".sh"

cp -r $RUNPATH $SETUPPATH
echo "" > $FILE
if [ "$SUBMIT" = "TRUE" ] ; then 
  if [ "$BATCH" = "SGE" ] ; then
    echo "#$ -j y" >> $FILE
    echo "#$ -o $SETUPPATH" >> $FILE
    echo "#$ -N $FILE.$BATCH" >> $FILE
  else
    echo "#"$BATCH" -oe" >> $FILE
    echo "#"$BATCH" -o $FILE.$BATCH" >> $FILE
    echo "#"$BATCH" -m ae" >> $FILE
  fi
  echo "" >> $FILE
  echo "RUNPATH=$SETUPPATH" >> $FILE
  echo "LOGFILE=\"$LOGFILE\"" >> $FILE
  echo "" >> $FILE
  echo "echo \"\" > \$RUNPATH\"/\"\$LOGFILE" >> $FILE
  echo "echo \"HOSTNAME    = \$HOSTNAME\" >> \$RUNPATH\"/\"\$LOGFILE" >> $FILE
  echo "echo \"HOME        = \$HOME\" >> \$RUNPATH\"/\"\$LOGFILE" >> $FILE
  echo "echo \"USER        = \$USER\" >> \$RUNPATH\"/\"\$LOGFILE" >> $FILE
  echo "echo \"\" >> \$RUNPATH\"/\"\$LOGFILE" >> $FILE
  if [ "$BATCH" = "SGE" ] ; then
    echo "echo \"JOB_ID      = \$JOB_ID\" >> \$RUNPATH\"/\"\$LOGFILE" >> $FILE
    echo "echo \"JOB_NAME    = \$JOB_NAME\" >> \$RUNPATH\"/\"\$LOGFILE" >> $FILE
    echo "echo \""$BATCH"_TASK_ID = \$"$BATCH"_TASK_ID\" >> \$RUNPATH\"/\"\$LOGFILE" >> $FILE
    echo "echo \"QUEUE       = \$QUEUE\" >> \$RUNPATH\"/\"\$LOGFILE" >> $FILE
    echo "echo \"TMPDIR      = \$TMPDIR\" >> \$RUNPATH\"/\"\$LOGFILE" >> $FILE
  else
    echo "echo \""$BATCH"_JOBID     = \$"$BATCH"_JOBID\" >> \$RUNPATH\"/\"\$LOGFILE" >> $FILE
    echo "echo \""$BATCH"_JOBNAME   = \$"$BATCH"_JOBNAME\" >> \$RUNPATH\"/\"\$LOGFILE" >> $FILE
    echo "echo \""$BATCH"_O_QUEUE   = \$"$BATCH"_O_QUEUE\" >> \$RUNPATH\"/\"\$LOGFILE" >> $FILE
    echo "echo \""$BATCH"_O_WORKDIR = \$"$BATCH"_O_WORKDIR\" >> \$RUNPATH\"/\"\$LOGFILE" >> $FILE
  fi
  echo "echo \"\" >> \$RUNPATH\"/\"\$LOGFILE" >> $FILE
  echo "" >> $FILE
  echo "echo \"Submitted on "$TIME"\" >> \$RUNPATH\"/\"\$LOGFILE" >> $FILE
  echo "echo \"Started on   \`date\`\" >> \$RUNPATH\"/\"\$LOGFILE" >> $FILE
  echo "" >> $FILE
  echo "echo \"\" >> \$RUNPATH\"/\"\$LOGFILE" >> $FILE
  echo "" >> $FILE
else
  echo "#!/bin/bash" >> $FILE
  echo "" >> $FILE
  echo "RUNPATH=$SETUPPATH" >> $FILE
  echo "LOGFILE=\$SETUPPATH\"$LOGFILE\"" >> $FILE
  echo "" >> $FILE
fi
echo "cd $BINPATH" >> $FILE
echo -en "./Sherpa PATH=\$RUNPATH " >> $FILE
if [ ! "$RESULTS" = "" ] ; then echo -en "RESULTS=\$RUNPATH\"/$RESULTS\" " >> $FILE ; fi
if [ ! "$ANALYSIS" = "" ] ; then echo -en "ANALYSIS_OUTPUT=\$RUNPATH\"/$ANALYSIS\" " >> $FILE ; fi
if [ ! "$EVENTS" = "" ] ; then echo -en "EVENTS=$EVENTS " >> $FILE ; fi
if [ ! "$SOPTIONS" = "" ] ; then echo -en "$SOPTIONS " >> $FILE ; fi
echo -e ">> \$RUNPATH\"/\"\$LOGFILE 2>&1 \n\n" >> $FILE

chmod 777 $FILE
if [ "$SUBMIT" = "TRUE" ] ; then
  qsub $FILE $BOPTIONS
else
  ( nohup $FILE > /dev/null & ) 
fi
mv $FILE $SETUPPATH

# mode:shell-script
# sh-indentation:2
