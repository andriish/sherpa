#!/bin/bash
TIME=`date +'%y-%m-%d_%H-%M-%S'`

rmr () {  
  for file in * ; do                                                          
    if [ -d $file ] ; then                                                       
      cd $file                                                                  
      rmr "$1" $2
      cd ..                                                             
    fi
  done  
  for i in $1 ; do    
    rm -f $2 $i                                                                         
  done
}                                                                               

RUNPATH=""
RUNFILE=""
BINPATH=""
RESULTS=""
ANALYSIS=""
BASENAME=""
PYTHIA=""
for I in $* ; do
  if [ "$I" = "-p" ]; then DRUNPATH=TRUE 
  elif [ "$I" = "-f" ]; then DRUNFILE=TRUE 
  elif [ "$I" = "-b" ]; then DBINPATH=TRUE 
  elif [ "$I" = "-r" ]; then DRESULTS=TRUE 
  elif [ "$I" = "-a" ]; then DANALYSIS=TRUE 
  elif [ "$I" = "-e" ]; then DEVENTS=TRUE 
  elif [ "$I" = "-n" ]; then DBASENAME=TRUE 
  elif [ "$I" = "-q" ]; then QUEUE=TRUE 
  elif [ "$I" = "-P" ]; then DPYTHIA=TRUE 
  elif [ "$I" = "-h" ]; then echo && \
    echo "run version 1.0" && echo && \
    echo "options: -p <path>      read configuration from path <path>" && \
    echo "         -f <file>      read basic configuration from file <file>" && \
    echo "         -b <binpath>   take executeable from path <binpath>" && \
    echo "         -r <results>   write results to path <path>/<results>" && \
    echo "         -e <events>    generate <events> events" && \
    echo "         -a <analysis>  write analysis output to path <path>/<analysis>" && \
    echo "         -n <name>      set basic filename to <name>" && \
    echo "         -q             submit job to batch system" && \
    echo "         -P <file>      generate pythia events according to <file>" && \
    echo "         -h             display this help and exit" && echo && \
    exit 0
  elif [ "$DRUNPATH" = "TRUE" ]; then DRUNPATH="" && RUNPATH=$I
  elif [ "$DRUNFILE" = "TRUE" ]; then DRUNFILE="" && RUNFILE=$I
  elif [ "$DBINPATH" = "TRUE" ]; then DBINPATH="" && BINPATH=$I
  elif [ "$DRESULTS" = "TRUE" ]; then DRESULTS="" && RESULTS=$I
  elif [ "$DANALYSIS" = "TRUE" ]; then DANALYSIS="" && ANALYSIS=$I
  elif [ "$DBASENAME" = "TRUE" ]; then DBASENAME="" && BASENAME=$I
  elif [ "$DEVENTS" = "TRUE" ]; then DEVENTS="" && EVENTS=$I
  elif [ "$DPYTHIA" = "TRUE" ]; then DPYTHIA="" && PYTHIA=$I
  else echo "run: error: unrecognized option '$I'. try '-h'" && \
    exit 1 
  fi
done
if [ "$RUNPATH" = "" ]; then RUNPATH="./" ; fi
#if [ "$RUNFILE" = "" ]; then RUNFILE="Run.dat" ; fi
if [ "$BINPATH" = "" ]; then BINPATH="./" ; fi
#if [ "$RESULTS" = "" ]; then RESULTS="results/" ; fi
#if [ "$ANALYSIS" = "" ]; then ANALYSIS="analysis/" ; fi
if [ "$BASENAME" = "" ]; then BASENAME="job" ; fi

FILE=$BASENAME"_"$TIME
LOGFILE=$PWD"/"$FILE

echo "" > $FILE
if [ "$QUEUE" = "TRUE" ] ; then 
  echo "echo \"\" > $LOGFILE.log" >> $FILE
  echo "echo \"HOSTNAME    = \$HOSTNAME\" >> $LOGFILE.log" >> $FILE
  echo "echo \"HOME        = \$HOME\" >> $LOGFILE.log" >> $FILE
  echo "echo \"USER        = \$USER\" >> $LOGFILE.log" >> $FILE
  echo "echo \"\" >> $LOGFILE.log" >> $FILE
  echo "echo \"QUEUE       = \$QUEUE\" >> $LOGFILE.log" >> $FILE
  echo "echo \"SGE_TASK_ID = \$SGE_TASK_ID\" >> $LOGFILE.log" >> $FILE
  echo "echo \"JOB_ID      = \$JOB_ID\" >> $LOGFILE.log" >> $FILE
  echo "echo \"JOB_NAME    = \$JOB_NAME\" >> $LOGFILE.log" >> $FILE
  echo "echo \"TMPDIR      = \$TMPDIR\" >> $LOGFILE.log" >> $FILE
  echo "echo \"\" >> $LOGFILE.log" >> $FILE
  echo "" >> $FILE
fi
echo "cd $BINPATH" >> $FILE
echo -en "./Sherpa PATH=$RUNPATH " >> $FILE
if [ ! "$RUNFILE" = "" ] ; then echo -en "RUNDATA=$RUNFILE " >> $FILE ; fi
if [ ! "$RESULTS" = "" ] ; then echo -en "RESULTS=$RESULTS " >> $FILE ; fi
if [ ! "$ANALYSIS" = "" ] ; then echo -en "ANALYSIS_OUTPUT=$ANALYSIS " >> $FILE ; fi
if [ ! "$EVENTS" = "" ] ; then echo -en "EVENTS=$EVENTS " >> $FILE ; fi
if [ ! "$PYTHIA" = "" ] ; then echo -en "PYTHIA=$PYTHIA " >> $FILE ; fi
echo -e ">> $LOGFILE.log 2>&1 \n" >> $FILE

if [ "$QUEUE" = "TRUE" ] ; then
  echo qsub $FILE  
else
  chmod 777 $FILE
  ( nohup $FILE > /dev/null & ) 
fi

#$ -j y
#$ -o <output>
#$ -N <outfilename>

# mode:shell-script
# sh-indentation:2
