#!/bin/bash

DIRS="ATOOLS-2.0 PDF-1.0 BEAM-1.0 PHASIC++-1.0 MODEL-1.0"
DIRS=$DIRS" EXTRA_XS-1.0 APACIC++-2.0 AMEGIC++-2.0"
#DIRS=$DIRS" AMISIC++-1.0 COMPARE-1.0"
DIRS=$DIRS" SHERPA-1.0"

ECXXFLAGS=""
EFFLAGS=""
ECOPT=""
EMOPT=""
for I in $* ; do
  if [ "$I" = "-c" ]; then CONFIGURE=TRUE 
  elif [ "$I" = "-t" ]; then TOTAL=TRUE && CONFIGURE=TRUE
  elif [ "$I" = "-e" ]; then EXTRACT=TRUE
  elif [ "$I" = "--clean" ]; then CLEAN=TRUE
  elif [ "$I" = "--clean-run" ]; then RUNCLEAN=TRUE
  elif [ "$I" = "--no-abort" ]; then NOABORT=TRUE
  elif [ "$I" = "--copt" ]; then DCOPT=TRUE 
  elif [ "$I" = "--mopt" ]; then DMOPT=TRUE 
  elif [ "$I" = "--cxx" ]; then DCXXFLAGS=TRUE 
  elif [ "$I" = "--f" ]; then DFFLAGS=TRUE 
  elif [ "$I" = "--force-tar" ]; then FORCE=TRUE && EXTRACT=TRUE
  elif [ "$I" = "-h" ]; then echo && \
    echo "makeinstall version 1.0" && echo && \
    echo "options: -c             configure before compiling (enabled with '-t')" && \
    echo "         -t             rebuild 'Makefile.in's and 'configure' before compiling" && \
    echo "         -e             extract tar files" && \
    echo "         --clean        execute 'make clean' in every module before compiling" && \
    echo "         --clean-run    execute './SHERPA-1.0/Run/makeclean' before compiling" && \
    echo "         --no-abort     ignore exit status of 'make'" && \
    echo "         --copt         define option for 'configure'" && \
    echo "         --mopt         define option for 'make' (default is '-j2')" && \
    echo "         --cxx          define cxx flag for 'make'" && \
    echo "         --f            define fortran flag for 'make'" && \
    echo "         --force-tar    force extraction of tar files (enables '-e')" && \
    echo "         -h             display this help and exit" && echo && \
    exit 0
  elif [ "$DCXXFLAGS" = "TRUE" ]; then DCXXFLAGS="" && ECXXFLAGS=$ECXXFLAGS" "$I
  elif [ "$DFFLAGS" = "TRUE" ]; then DFFLAGS="" && EFFLAGS=$EFFLAGS" "$I
  elif [ "$DCOPT" = "TRUE" ]; then DCOPT="" && ECOPT=$ECOPT" "$I
  elif [ "$DMOPT" = "TRUE" ]; then DMOPT="" && EMOPT=$EMOPT" "$I
  else echo "makeinstall: error: unrecognized option '$I'. try '-h'" && \
    exit 1 
  fi
done
if [ ! "$ECXXFLAGS" = "" ]; then ECXXFLAGS="CXXFLAGS="$ECXXFLAGS ; fi
if [ ! "$EFFLAGS" = "" ]; then EFFLAGS="FFLAGS="$EFFLAGS ; fi
if [ "$EMOPT" = "" ]; then EMOPT="-j2" ; fi

if test "$EXTRACT" = "TRUE" ; then
  echo "**************************************"
  echo "*   extracting the SHERPA package    *"
  echo "**************************************"
  ALL=
  for I in $DIRS;
  do
    if test -s $I.tar.gz; then
      echo "makeinstall: testing for $I"
      if `test ! -d $I` || `test "$FORCE" = "TRUE"` ; then 
        echo "======================================"
        echo " extracting $I"
        echo "======================================"
        tar -xzvf $I.tar.gz
        ALL=$ALL" "$I.tar.gz
      else
        echo "makeinstall: warning: directory $I already present"
      fi
    else
      echo "makeinstall: warning: tar file $I.tar.gz not found"
    fi
  done
  rm -f $ALL
fi

echo "**************************************"
echo "*   installing the SHERPA package    *"
echo "**************************************"
if test "$RUNCLEAN" = "TRUE" ; then
  if cd SHERPA-1.0/Run ; then
    ./makeclean
    cd ../..
  fi
fi
for I in $DIRS;
do
  if test -d $I; then
    echo "======================================"
    echo " making install in $I"
    echo "======================================"
    cd $I 
    if `test "$TOTAL" = "TRUE"` ; then
      libtoolize --force
      aclocal
      automake -a
      autoconf
    fi
    if test "$CONFIGURE" = "TRUE" ; then
      ./configure "$ECOPT"
    fi
    if `test "$CLEAN" = "TRUE"` ; then 
      make clean
    fi
    CONTINUE="r"
    while test "$CONTINUE" = "r" ; do 
      CONTINUE=""
      if ! ( if [ "$ECXXFLAGS" = "" ] && [ "$EFFLAGS" = "" ] ; then make install $EMOPT 
             elif [ "$EFFLAGS" = "" ] ; then make install $EMOPT "$ECXXFLAGS" 
             elif [ "$ECXXFLAGS" = "" ] ; then make install $EMOPT "$EFFLAGS" 
             else make install $EMOPT "$ECXXFLAGS" "$EFFLAGS" 
             fi ) ; then
	echo "makeinstall: error: \"make install\" in $I failed"
        if test ! "$NOABORT" = "TRUE" ; then
          until test "$CONTINUE" = "y" || test "$CONTINUE" = "n" || test "$CONTINUE" = "r" ; do
    	    if ! read -t 300 -p "continue anyway (y/n/r) ? " CONTINUE ; then
	      echo ""
	      CONTINUE="n"
	    fi
	    if test "$CONTINUE" = "n" ; then
              exit 1
	    fi
	  done
        fi
      fi
    done
    cd ..
  else
    echo "makeinstall: error: directory $I not found"
    exit 2
  fi
done;
