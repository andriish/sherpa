dnl Process this file with autoconf to produce a configure script.
AC_INIT
AM_INIT_AUTOMAKE(AMISIC++,1.0)
AM_DISABLE_STATIC
AC_PREFIX_DEFAULT(${PWD}/..)

dnl Conditional compiling and linking
AC_ARG_ENABLE(sherpa,
[  --disable-sherpa        Disable SHERPA Support ],
[ sherpa=true
  SHERPADIR="../SHERPA-1.0"
  if test -d $SHERPADIR ; then
    echo "checking for SHERPA package... yes"
    case "${enableval}" in
      no) echo "disable SHERPA support anyway... yes";
          sherpa=false ;;
    esac
  else
    echo "checking for SHERPA package... no"
    sherpa=false
  fi ],
[ SHERPADIR="../SHERPA-1.0"
  if test ! -d $SHERPADIR ; then
    echo "configure: warning: $SHERPADIR is not a valid path."
    sherpa=false
  else 
    echo "checking for SHERPA package... yes"
    sherpa=true 
  fi ])
AM_CONDITIONAL(SHERPA_SUPPORT, test "$sherpa" = "true" )
AC_ARG_ENABLE(cvsinclude,
[  --disable-cvsinclude    Disable CVS Synchronization ],
[ cvsinclude=true
  case "${enableval}" in
    no) echo "enable CVS synchronization... no" ;
        cvsinclude=false ;;
    yes) echo "enable CVS synchronization... yes" ;;
    *) echo "enable CVS synchronization... yes" ;;
  esac ],
[ echo "enable CVS synchronization... yes" ;
  cvsinclude=true ])
AM_CONDITIONAL(CVS_INCLUDE, test "$cvsinclude" = "true" )
AC_ARG_ENABLE(root,
[  --enable-root           Enable ROOT support ],
[ root=false
  if test -d "$ROOTSYS"; then
    echo "checking for ROOT libraries... yes"
    case "${enableval}" in 
      yes) root=true ;;
    esac
  else 
    echo "checking for ROOT libraries... no"
    case "${enableval}" in 
      yes) AC_MSG_ERROR(\$ROOTSYS is not a valid path.) ;;
    esac
  fi ],[ root=false ])
AM_CONDITIONAL(ROOT_SUPPORT, test $root = true)

AC_ARG_ENABLE(hdecay,
[  --enable-hdecay         Enable HDECAY support ],
[ AC_MSG_CHECKING(whether to enable HDECAY support);AC_MSG_RESULT(${enableval});
	case "${enableval}" in
		yes) hdecay=true ;;
		no)  hdecay=false;;
	esac ],[ hdecay=false ])
AM_CONDITIONAL(HDECAY_SUPPORT, test $hdecay = true)

AC_ARG_ENABLE(isajet,
[  --enable-isajet         Enable ISAJET support ],
[ AC_MSG_CHECKING(whether to enable ISAJET support);AC_MSG_RESULT(${enableval});
	case "${enableval}" in
		yes) isajet=true ;;
		no)  isajet=false;;
	esac ],[ isajet=false ])
AM_CONDITIONAL(ISAJET_SUPPORT, test $isajet = true)

dnl Checks for programs.
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_CXX
AC_PROG_CC
AM_PROG_LIBTOOL

dnl Checks for header files.
AC_HEADER_STDC

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T

dnl Checks for library functions.
AC_CHECK_FUNCS(mkdir)

AC_OUTPUT(Tools/Makefile \
	  Model/Makefile \
	  Main/Makefile \
	  Run/Makefile \
	  Makefile )










