@node Matrix Elements
@section Matrix Elements

The setup of matrix elements is covered by the `(me)' section of
the steering file or the ME data file `ME.dat', respectively.
There are no mandatory settings to be made.

The following parameters are used to steer the matrix element setup.

@menu
* ME_SIGNAL_GENERATOR::     The matrix element generator(s).
* RESULT_DIRECTORY::        The directory to store integration results.
* EVENT_GENERATION_MODE::   The event generation mode.
* SCALES::                  How to compute the scales. 
* COUPLINGS::               How to evaluate the couplings.
@end menu


@node ME_SIGNAL_GENERATOR
@subsection ME_SIGNAL_GENERATOR
@cindex ME_SIGNAL_GENERATOR
The list of matrix element generators to be employed during the run.
When setting up hard processes from the @option{(processes)} section of the 
input file (see @ref{Processes}), Sherpa calls these generators in order
to check whether either one is capable of generating the corresponding
matrix element. This parameter can also be set on the command line using
option @option{-m}, see @ref{Command line}.

The built-in generators are

@table @option
@item Internal
Simple matrix element library, implementing a variety of 2->2 processes.
@item Amegic
The AMEGIC++ generator published under @mycite{Krauss2001iv}
@item Comix
The @uref{http://comix.freacafe.de,,Comix} generator published under
@mycite{Gleisberg2008fv}
@end table

It is possible to employ an external matrix element generator within Sherpa.
For advice on this topic please contact the authors, @ref{Authors}.


@node RESULT_DIRECTORY
@subsection RESULT_DIRECTORY
@cindex RESULT_DIRECTORY
This parameter specifies the name of the directory
which is used by Sherpa to store integration results
and phasespace mappings. The default is @samp{Results/}.
It can also be set using the command line parameter @option{-r},
see @ref{Command line}. The directory will not be created automatically
by Sherpa, unless the command line parameter @option{-g} is set.


@node EVENT_GENERATION_MODE
@subsection EVENT_GENERATION_MODE
@cindex EVENT_GENERATION_MODE
This parameter specifies the event generation mode.
The two possible options are @option{Weighted} (shortcut
@option{W}) and @option{Unweighted} (shortcut @option{U}).
It can also be set on the command line
using option @option{-w}, see @ref{Command line}.


@node SCALES
@subsection SCALES
@cindex SCALES
This parameter specifies how to compute the renormalization and
factorization scale and potential additional scales.

Sherpa provides several built-in scale schemes.
The options which are currently available are

@table @option
@item VAR
Scales are specified by additional parameters in a form which is understood
by the internal interpreter, see @ref{Interpreter}. If, for example the invariant 
mass of the lepton pair in Drell-Yan production is the desired scale,
the corresponding setup reads

@verbatim
SCALES VAR{Abs2(p[2]+p[3])}
@end verbatim

Renormalization and factorization scales can be chosen differently.
For example in Drell-Yan + jet production one could set

@verbatim
SCALES VAR{Abs2(p[2]+p[3])}{MPerp2(p[2]+p[3])}
@end verbatim

In this case the factorization scale must be specified first.
More than two scales can be set as well to be subsequently used, e.g.
by the @option{VAR} coupling scheme, see @ref{COUPLINGS}.

@item QCD
The matrix element is clustered onto a core 2->2 configuration using a
k_T-type algorithm with recombination into on-shell partons.
Scales are defined as the minimum of the largest transverse momentum
during clustering and the lowest invariant mass in the core process.

@item METS
The matrix element is clustered onto a core 2->2 configuration using a
k_T-type algorithm with recombination into on-shell particles, which
are determined according to run-time information from the matrix element
generator.
Scales are defined as the minimum of the largest transverse momentum
during clustering and the lowest invariant mass in the core process.

@item NLO
This scale scheme has a similar functionality and syntax as the 
@option{VAR} scheme. It is currently the only scheme to be used with
next-to-leading order calculations. It makes sure that the scale is 
calculated separately for the real correction and the subtraction terms,
such that within the subtraction procedure the same amount is subtracted
and added back.

The definition of the scale must be infrared safe wrt to the radiation
of an extra parton. Infrared safe (for QCD-NLO calculations) are:

@itemize
@item any function of momenta of NOT strongly interacting particles
@item sum of transverse quantities of all partons (e.g. H_T2)
@item any quantity refering to jets, constructed by an IR safe
jet algorithm (not implemented yet)
@end itemize

Not infrared safe are

@itemize
@item any function of momenta of specific partons
@item for processes with hadrons in the initial state: 
any quantity that depends on parton momenta along the beam axis, 
including the initial state partons itself 
@end itemize

Since the total number of partons is different for different pieces
of the NLO calculation any explicit reference to a parton momentum
will lead to an inconsistent result.

@end table

It is possible to implement a dedicated scale
scheme within Sherpa. For advice on this topic
please contact the authors, @ref{Authors}.

@cindex FACTORIZATION_SCALE_FACTOR
@cindex RENORMALIZATION_SCALE_FACTOR

Simple scale variations can be done using the following parameters:
@itemize
@item `FACTORIZATION_SCALE_FACTOR' specifies a global factor which the squared
factorisation scale (as specified above) is to be multiplied with when
evaluating PDFs.

Note: Shower starting scales are not affected by this factor, change the
`SCALES' parameter to achieve that.
@item `RENORMALIZATION_SCALE_FACTOR' specifies a global factor which the
squared renormalisation scale (as specified above) is to be multiplied with
when evaluating running couplings.

Note: This affects also the running coupling used in the parton shower evolution.
@end itemize

@node COUPLINGS
@subsection COUPLINGS
@cindex COUPLINGS
This parameter specifies how to evaluate couplings in the hard
process. Within Sherpa, this means the scheme to employ
the renormalization scale for reweighting matrix elements,
which are initially computed with a fixed value 
of the coupling constants. If, for example 
the strong coupling is to be evaluated at the
renormalization scale set by the specified scale setter
(cf. @ref{SCALES}), the corresponding value
is @option{QCD}. The currently available options are

@table @option
@item NO   
No reweighting
@item QCD  
Reweighting of QCD couplings only
@item VAR
Couplings specified by an additional parameter in a form which is understood
by the internal interpreter, see @ref{Interpreter}. The tags @kbd{Alpha_QCD}
and @kbd{Alpha_QED} serve as links to the built-in running coupling implementation.

If for example the process @samp{g g -> h g} in effective theory is computed,
one could think of evaluating two powers of the strong coupling at the Higgs mass scale 
and one power at the transverse momentum squared of the gluon.
Assuming the Higgs mass to be 120 GeV, the corresponding reweighting factor would read

@verbatim
SCALES    VAR{...}{PPerp(p[3])}
COUPLINGS VAR{sqr(Alpha_QCD(120))*Alpha_QCD(MU_R2)/pow(Alpha_QCD(S_TOT),3)}
@end verbatim

If more than two scales are to be used, the subsequent scales are referred to
as @kbd{MU_<i>2}, where @kbd{<i>} is replaced with the appropriate number,
including an offset of one.
Their values can be computed e.g. using the @option{VAR} scale setter, see
@ref{SCALES}. A fictious example would be

@verbatim
SCALES    VAR{...}{PPerp(p[4])}{Abs2(p[2]+p[3])}
COUPLINGS VAR{Alpha_QCD(MU_12)*Alpha_QED(MU_22)/(Alpha_QCD(S_TOT)*Alpha_QED(S_TOT))}
@end verbatim
@end table

It is possible to implement a dedicated coupling evaluation
scheme within Sherpa. For advice on this topic please contact
the authors, @ref{Authors}.

