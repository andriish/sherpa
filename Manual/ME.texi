@node Matrix Elements
@section Matrix Elements

The setup of matrix elements is covered by the `(me)' section of
the steering file or the ME data file `ME.dat', respectively.
There are no mandatory settings to be made.

The following parameters are used to steer the matrix element setup.

@menu
* ME_SIGNAL_GENERATOR::     The matrix element generator(s).
* RESULT_DIRECTORY::        The directory to store integration results.
* EVENT_GENERATION_MODE::   The event generation mode.
* K_FACTOR_SCHEME::         The K-factor scheme.
* SCALE_SCHEME::            The scale scheme. 
* FACTORIZATION_SCALE::     The factorization scale.
* RENORMALIZATION_SCALE::   The renormalization scale.
@end menu


@node ME_SIGNAL_GENERATOR
@subsection ME_SIGNAL_GENERATOR
@cindex ME_SIGNAL_GENERATOR
The list of matrix element generators to be employed during the run.
When setting up hard processes from the @option{(processes)} section of the 
input file (see @ref{Processes}), Sherpa calls these generators in order
to check whether either one is capable of generating the corresponding
matrix element. This parameter can also be set on the command line using
option @option{-m}, see @ref{Command line}.

The built-in generators are

@table @option
@item Internal
Simple matrix element library, implementing a variety of 2->2 processes.
@item Amegic
The AMEGIC++ generator published under @mycite{Krauss2001iv}
@item Comix
The @uref{http://comix.freacafe.de,,Comix} generator published under
@mycite{Gleisberg2008fv}
@end table

It is possible to employ an external matrix element generator within Sherpa.
For advice on this topic please contact the authors, @ref{Authors}.


@node RESULT_DIRECTORY
@subsection RESULT_DIRECTORY
@cindex RESULT_DIRECTORY
This parameter specifies the name of the directory
which is used by Sherpa to store integration results
and phasespace mappings. The default is @samp{Results/}.
It can also be set using the command line parameter @option{-r},
see @ref{Command line}. The directory will not be created automatically
by Sherpa, unless the command line parameter @option{-g} is set.


@node EVENT_GENERATION_MODE
@subsection EVENT_GENERATION_MODE
@cindex EVENT_GENERATION_MODE
This parameter specifies the event generation mode.
The two possible options are @option{Weighted} (shortcut
@option{W}) and @option{Unweighted} (shortcut @option{U}).
It can also be set on the command line
using option @option{-w}, see @ref{Command line}.


@node K_FACTOR_SCHEME
@subsection K_FACTOR_SCHEME
@cindex K_FACTOR_SCHEME
This parameter specifies the K-factor scheme.
Within Sherpa, this means the scheme to employ
the renormalization scale for reweighting matrix elements,
which are initially computed with a fixed value 
for the coupling constants. If, for example 
the strong coupling is to be evaluated at the
renormalization scale set by the specified scale setter
(cf. @ref{SCALE_SCHEME}), the corresponding value
is @option{QCD}. The available options are

@table @option
@item NO   
No reweighting
@item QCD  
reweighting of QCD couplings only
@end table

It is possible to implement a dedicated K-factor
scheme within Sherpa. For advice on this topic
please contact the authors, @ref{Authors}.


@node SCALE_SCHEME
@subsection SCALE_SCHEME
@cindex SCALE_SCHEME
This parameter specifies the scale scheme.
Within Sherpa, this means the scheme to compute
the renormalization and factorization scales.

Sherpa provides several built-in scale schemes.
The options which are currently available are

@table @option
@item VAR
Scales are specified by the parameters @option{RENORMALIZATION_SCALE}
and @option{FACTORIZATION_SCALE} in a form which is understood by the
internal interpreter, see @ref{Interpreter}. If, for example the invariant 
mass of the lepton pair in Drell-Yan production is the desired scale,
the corresponding setup reads

@verbatim
FACTORIZATION_SCALE Abs2(p[2]+p[3])
RENORMALIZATION_SCALE Abs2(p[2]+p[3])
@end verbatim

@item QCD
The matrix element is clustered onto a core 2->2 configuration using a
k_T-type algorithm with recombination into on-shell partons.
Scales are defined as the minimum of the largest transverse momentum
during clustering and the lowest invariant mass in the core process.

@item METS
The matrix element is clustered onto a core 2->2 configuration using a
k_T-type algorithm with recombination into on-shell particles, which
are determined according to run-time information from the matrix element
generator. QCD clusterings are preferred over electroweak ones.
Scales are defined as the minimum of the largest transverse momentum
during clustering and the lowest invariant mass in the core process.
@end table

It is possible to implement a dedicated scale
scheme within Sherpa. For advice on this topic
please contact the authors, @ref{Authors}.


@node FACTORIZATION_SCALE
@subsection FACTORIZATION_SCALE
@cindex FACTORIZATION_SCALE
This parameter sepecifies how to potentially modify 
the factorization scale computed by the scale scheme, see
@ref{SCALE_SCHEME}. The syntax must be in a form
which is understood by the internal interpreter
@ref{Interpreter}. Examples are

@itemize
@item FACTORIZATION_SCALE 2*MU_F
@item FACTORIZATION_SCALE MU_F/2
@end itemize


@node RENORMALIZATION_SCALE
@subsection RENORMALIZATION_SCALE
@cindex RENORMALIZATION_SCALE
This parameter sepecifies how to potentially modify 
the renormalization scale computed by the scale scheme, see
@ref{SCALE_SCHEME}. The syntax must be in a form 
which is understood by the internal interpreter
@ref{Interpreter}. Examples are

@itemize
@item RENORMALIZATION_SCALE 2*MU_F
@item RENORMALIZATION_SCALE MU_F/2
@end itemize

