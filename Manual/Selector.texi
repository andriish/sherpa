@node Selectors
@section Selectors

The setup of cuts at the matrix element level is covered
by the `(selector)' section of the steering file or the 
selector data file `Selector.dat', respectively.

Sherpa provides the following selectors

@menu
* One particle selectors::    one particle selectors
* Two particle selectors::    two particle selectors
* Jet finders::               cuts on QCD partons
* Universal selector::        user-defined cuts
@end menu

@node One particle selectors
@subsection One particle selectors

The selectors listed here implement cuts on the
matrix element level, based on single particle kinematics.
The corresponding  syntax in @file{Selector.dat} is 
@verbatim
<keyword> <flavour code> <min value> <max value>
@end verbatim

@option{<min value>} and @option{<max value>} are floating point
numbers, which can also be given in a form that is understood
by the internal algebra interpreter, see @ref{Interpreter}.
The selectors act on @emph{all} possible particles with 
the given flavour. Their respective keywords are

@table @option
@item Energy
energy cut
@item ET
transverse energy cut
@item PT
transverse momentum cut
@item Rapidity
rapidity cut
@item PseudoRapidity
pseudorapidity cut
@end table


@node Two particle selectors
@subsection Two particle selectors

The selectors listed here implement cuts on the
matrix element level, based on two particle kinematics.
The corresponding  syntax in @file{Selector.dat} is 
@verbatim
<keyword> <flavour1 code> <flavour2 code> <min value> <max value>
@end verbatim

@option{<min value>} and @option{<max value>} are floating point
numbers, which can also be given in a form that is understood
by the internal algebra interpreter, see @ref{Interpreter}.
The selectors act on @emph{all} possible particles with 
the given flavour. Their respective keywords are

@table @option
@item Mass
invariant mass
@item Angle
angular separation (rad)
@item BeamAngle
angular separation w.r.t. beam

(@samp{<flavour2 code>} is 0 or 1, referring to beam 1 or 2)
@item DeltaEta
pseudorapidity separation
@item DeltaPhi
azimuthal angle separation (rad)
@item DeltaR
R separation
@end table


@node Jet finders
@subsection Jet finders

There are two different types of jet finders

@table @option
@item JetFinder   
k_T-algorithm
@item ConeFinder  
cone-algorithm
@end table

Their respective syntax is 
@verbatim
JetFinder  <ycut>[<ycut decay 1>[<ycut decay 11>...]...]... <D parameter>
ConeFinder <min R> 
@end verbatim

For @option{JetFinder}, it is possible to give different values
of ycut in individual subprocesses of a production-decay chain.
The square brackets are then used to denote the decays.
In case only one uniform set of ycut is to be used, the square brackets
are left out.

@option{<ycut>}, @option{<min R>} and @option{<D parameter>} are
floating point numbers, which can also be given in a form that is
understood by the internal algebra interpreter, see @ref{Interpreter}.


@node Universal selector
@subsection Universal selector

The universal selector is intended to implement non-stnadard cuts
on the matrix element level. Its syntax is
@verbatim
"<variable>" <kf1>,..,<kfn> <min1>,<max1>;..;<minn>,<maxn> [<order1>,...,<orderm>]
@end verbatim

@emph{No additional white spaces are allowed}

The first word has to be double-quoted, and contains the name
of the variable to cut on. The keywords for available predefined
<variable>s can be figured by running Sherpa @option{SHOW_VARIABLE_SYNTAX=1}.
Or alternatively, an arbitrary cut variable can be constructed using
the internal interpreter, see @ref{Interpreter}. This is invoked
with the command @samp{Calc(...)}. In the formula specified there
you have to use place holders for the momenta of the particles: 
@samp{p[0]} ... @samp{p[n]} hold the momenta of the respective particles 
@samp{kf1} ... @samp{kfn}. A list of available vector functions and
operators can be found here @ref{Interpreter}.

@option{<kf1>,..,<kfn>} specify the PDG codes of the particles
the variable has to be calculated from. In case this choice is
not unique in the final state, you have to specify multiple cut ranges
(@option{<min1>,<max1>;..;<minn>,<maxn>}) for all (combinations
of) particles you want to cut on, separated by semicolons.

If no fourth argument is given, the order of cuts is determined
internally, according to Sherpa's process classification scheme.
This then has to be matched if you want to have different cuts
on certain different particles in the matrix element. To do this,
you should put enough (for the possible number of combinations 
of your particles) arbitrary ranges at first and run Sherpa 
with debugging output for the universal selector:
@samp{Sherpa OUTPUT=2[Variable_Selector::Trigger|15]}.
This will start to produce lots of output during integration,
at which point you can interrupt the run (Ctrl-c). In the
@samp{Variable_Selector::Trigger(): @{...@}} output you can see,
which particle combinations have been found and which cut range
your selector has held for them (vs. the arbitrary range you
specified). From that you should get an idea, in which order
the cuts have to be specified.

If the fourth argument is given, particles are ordered
before the cut is applied. Possible orderings are @option{PT_UP},
@option{ET_UP}, @option{E_UP} and @option{ETA_UP}, 
(increasing p_T, E_T, E, eta). They have to be specified
for each of the particles, separated by commas.


Examples

@table @asis
@item Two-body transverse mass

      "mT" 11,-12 50,E_CMS

@item Cut on the pT of only the hardest lepton in the event

      "PT"   90   50.0,E_CMS   [PT_UP]

@item Using bool operations to restrict eta of the electron to |eta| < 1.1 or 1.5 < |eta| < 2.5

      "Calc(abs(Eta(p[0]))<1.1||(abs(Eta(p[0]))>1.5&&abs(Eta(p[0]))<2.5))" 11 1,1

      Note the range 1,1 meaning true for bool operations.

@item Requesting opposite side tag jets in VBF would for example need a setup like this

      "Calc(Eta(p[0])*Eta(p[1]))" 93,93 -100,0 [PT_UP,PT_UP]

@item Restricting electron+photon mass to be outside of [87.0,97.0]:

      "Calc(Mass(p[0]+p[1])<87.0||Mass(p[0]+p[1])>97.0)" 11,22 1,1

@item In @samp{Z[lepton lepton] Z[lepton lepton]}, cut on mass of lepton-pairs produced from Z's:

      "m"   90,90   80,100;0,E_CMS;0,E_CMS;0,E_CMS;0,E_CMS;80,100;

      Here we use knowledge about the internal ordering to cut only on the correct lepton pairs.

@end table
